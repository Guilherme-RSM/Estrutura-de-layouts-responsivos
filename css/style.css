* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;


}


body {
    display: flex;
    margin: 3px;

    /*flex-grow é a propriedade que define o fator de crescimento flexível de um item flexível.
    flex-grow: 1;

    /*flex-shrink é a propriedade que define o fator de redução flexível de um item flexível. */
    flex-shrink: 1;

    /*flex-basis é a propriedade que define o tamanho principal inicial de um item flexível*/
    flex-basis: 100vw;

    /*flex wrap deve ser aplicado no elmento pai para permitir a quebra de linha  entre os elementos quando não couberem na largura da tela*/
    flex-wrap: wrap;
}

header, nav, main, aside, footer {
    background: #a1a1a1;
    display: flex;
    margin: 3px;
}

header {
    flex: 1 1 100vw;
    height: 100px;
}

nav {
    flex: 1 1 200px;
}

main {
    flex: 1 1 500px;

    /*para que nao tenha rolamento vertical, deve ser aplicada uma altura fixa para cada elemento porém será utilizada a função calc ao definir a altura do main como 100vh - a soma da altura do header e do footer + a soma da margem aplicada entre os elementos. */
    height: calc(100vh - 224px);
}

aside {
    flex: 1 1 200px;
}

footer {
    flex: 1 1 100vw;
    height: 100px;
}

/*Nessa regra será  verificado se a largura do dispositvo não é maior que 923px.*/
/*caso positivo essa verificação, as propriedades adicionadas serão aplicadas no elemento especificado nessa regra*/
@media only screen and (max-width:923px) {
main {
    height:calc(100vh - 330px);
    background:red;
}
}

